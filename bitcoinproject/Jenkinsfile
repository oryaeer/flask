pipeline {
    agent any
    
    environment {
        EC2_IP = "34.229.14.194"
    }
    
    stages {
        stage('Cleanup') {
            steps {
                echo "Performing cleanup..."
                sh 'rm -rf /var/lib/jenkins/workspace/first_pipeline'
            }
        }
        
        stage('Clone') {
            steps {
                echo "Building..."
                sh 'git clone https://github.com/oryaeer/flask.git /var/lib/jenkins/workspace/first_pipeline'
                sh '''
                cd /var/lib/jenkins/workspace/first_pipeline/bitcoinproject/
                ls
                '''
            }
        }
        
        stage('Packaging To S3') {
            steps {
                echo "Packaging..."
                sh '''
                    cd /var/lib/jenkins/workspace/first_pipeline/
                        tar -czvf bitcoinproject'
                    '''
                sh 'tar -tvf /var/lib/jenkins/workspace/first_pipeline/crypto.tar.gz' // List the contents of the archive
                sh 'ls'
                sh 'pwd'
            }
        }
        
        stage('Push To Cloud') {
            steps {
                echo "Pushing to S3"
                sh 'aws s3 cp /var/lib/jenkins/workspace/first_pipeline/crypto.tar.gz s3://oryaeer'
            }
        }
        
        stage('Fetch from S3 To EC2') {
            steps {
                withAWS(credentials: 'Jenkins-AWS') {
                    sh 'aws s3 cp s3://oryaeer/crypto.tar.gz /var/lib/jenkins/workspace/crypto.tar.gz'
                    sshagent(['aws-key-ssh']) {
                        sh 'scp -o StrictHostKeyChecking=no -i /var/lib/jenkins/oryaeer.pem /var/lib/jenkins/workspace/crypto.tar.gz ec2-user@${EC2_IP}:/home/ec2-user'
                    }
                }
            }
        }
        
        stage('Setting Up The Server') {
            steps {
                script {
                    withCredentials([sshUserPrivateKey(credentialsId: 'aws-key-ssh', keyFileVariable: 'KEY_FILE')]) {
                        sshagent(['aws-key-ssh']) {
                            sh """
                            ssh -o StrictHostKeyChecking=no -i /var/lib/jenkins/oryaeer.pem ec2-user@${EC2_IP} '
                            tar -xvf /home/ec2-user/crypto.tar.gz
                            sudo yum install python -y
                            sudo yum install python3-pip -y
                            sudo pip install ansible
                            '
                            """
                        }
                    }
                }
            }
        }

        
        stage('Deploy') {
            steps {
                echo "Deploying..."
                echo "Running the artifact on the new instance..."
                sh '''
                ssh -o StrictHostKeyChecking=no -i /var/lib/jenkins/oryaeer.pem ec2-user@${EC2_IP} '
                    ansible-playbook /home/ec2-user/bitcoinproject/requirements.yml
                '
                '''
            }
        }
    }
}
